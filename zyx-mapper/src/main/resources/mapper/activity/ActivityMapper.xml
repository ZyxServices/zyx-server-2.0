<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zyx.mapper.activity.ActivityMapper">
    <resultMap id="activityVo" type="com.zyx.vo.activity.ActivityVo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="desc_content" property="descContent" jdbcType="VARCHAR"/>
        <result column="img_urls" property="imgUrls" jdbcType="VARCHAR"/>
        <result column="activity_type" property="activityType" jdbcType="INTEGER"/>
        <result column="activity_module" property="activityModule" jdbcType="INTEGER"/>
        <result column="start_time" property="startTime" jdbcType="BIGINT"/>
        <result column="end_time" property="endTime" jdbcType="BIGINT"/>
        <result column="last_time" property="lastTime" jdbcType="BIGINT"/>
        <result column="max_people" property="maxPeople" jdbcType="INTEGER"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="payment_type" property="paymentType" jdbcType="INTEGER"/>
        <result column="price" property="price" jdbcType="DECIMAL"/>
        <result column="city" property="city" jdbcType="VARCHAR"/>
        <result column="target_url" property="targetUrl" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
        <result column="zan" property="zan" jdbcType="INTEGER"/>
        <association property="memberPeople" column="id"
                     select="com.zyx.mapper.activity.ActivityMemberMapper.countMemberByActivityId"></association>
        <association property="user" column="user_id"
                     select="com.zyx.mapper.account.AccountInfoMapper.selectAttentionAccountById"/>
    </resultMap>

    <resultMap id="activityListVo" type="com.zyx.vo.activity.ActivityListVo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="img_urls" property="imgUrls" jdbcType="VARCHAR"/>
        <result column="activity_type" property="activityType" jdbcType="INTEGER"/>
        <result column="start_time" property="startTime" jdbcType="BIGINT"/>
        <result column="end_time" property="endTime" jdbcType="BIGINT"/>
        <result column="last_time" property="lastTime" jdbcType="BIGINT"/>
        <result column="max_people" property="maxPeople" jdbcType="INTEGER"/>
        <result column="payment_type" property="paymentType" jdbcType="INTEGER"/>
        <result column="price" property="price" jdbcType="DECIMAL"/>
        <result column="city" property="city" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
        <result column="toZan" property="toZan" jdbcType="INTEGER"/>
        <association property="memberPeople" column="id"
                     select="com.zyx.mapper.activity.ActivityMemberMapper.countMemberByActivityId"></association>
        <association property="zan" column="id" select="zanExist"></association>
        <association property="commentNumber" column="id" select="commentCount"></association>
        <association property="user" column="user_id"
                     select="com.zyx.mapper.account.AccountInfoMapper.selectAttentionAccountById"/>
    </resultMap>

    <select id="queryActivity" parameterType="com.zyx.param.activity.QueryActivityParam" resultMap="activityListVo">
        SELECT a.*,IF(EXISTS(SELECT * FROM zan b WHERE b.body_id = a.id
        <if test="userId != null ">
            AND b.account_id = #{userId}
        </if>
        ),1,0) AS toZan from activity a
        where 1=1
        <if test="activityState == 1">
            AND a.last_time &gt; #{nowTime}
        </if>
        <if test="activityState == 2">
            AND (a.end_time - a.start_time) &lt; 0
        </if>
        <if test="activityType == 1">
            AND a.activity_type = 1
        </if>
        <if test="activityType == 2">
            AND a.activity_type = 2
        </if>
        <if test="city != null and city != ''">
            AND a.city = #{city}
        </if>
        AND a.del != 1 AND a.mask = 0 AND a.type = 1
        ORDER BY a.create_time desc
        <if test="pageNumber != null and number != null">
            limit #{pageNumber}, #{number}
        </if>
    </select>

    <select id="myActivityList" parameterType="com.zyx.param.activity.MyActivityListParam" resultMap="activityListVo">
        select a.*,IF(EXISTS(SELECT * FROM zan b WHERE b.body_id = a.id AND b.account_id = #{userId}),1,0) AS toZan from activity a
        where user_id = #{userId} AND a.del != 1 AND a.mask = 0 AND a.type = 1
        ORDER BY a.create_time desc
        <if test="pageNumber != null and number != null">
            limit #{pageNumber}, #{number}
        </if>
    </select>

    <select id="activityById" parameterType="java.util.Map" resultMap="activityVo">
        SELECT a.*,IF(EXISTS(SELECT * FROM zan b WHERE b.body_id = a.id
        <if test="userId != null ">
            AND b.account_id = #{userId}
        </if>
        ),1,0) AS toZan FROM activity a
        where a.id = #{activityId} AND a.del != 1 AND a.mask = 0
    </select>

    <select id="activityListById" parameterType="java.lang.Integer" resultMap="activityListVo">
        select * from activity where id = #{activityId} AND del != 1 AND mask = 0
    </select>

    <select id="zanExist" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT count(id) FROM zan WHERE body_id=#{bodyId} AND body_type=4
    </select>

    <select id="commentCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT COUNT(id) FROM comment WHERE comment_type=3 AND comment_id=#{commentId}
    </select>

    <delete id="delActivityById" parameterType="java.util.Map">
        DELETE FROM activity WHERE id = #{activityId} AND user_id = #{userId}
    </delete>

    <delete id="delConcern" parameterType="java.util.Map">
        DELETE FROM concern WHERE from_id = #{activityId} AND user_id = #{userId} AND from_type = 1
    </delete>

</mapper>